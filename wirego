#!/bin/bash

# Wirego: A script to manage WireGuard VPN profiles
# Repository: https://github.com/francescor/wirego

# Create necessary directories and files
mkdir -p ~/.wirego
touch ~/.wirego/wirego.profile
chmod 600 ~/.wirego/wirego.profile

# Function to list available profiles
function list_profiles() {
    echo
    read -rp "Press enter to see available profiles"
    echo
    echo "** Available WireGuard profiles:"
    echo
    echo "$profiles" | xargs -n1
}

# Function to output messages
function output_message() {
    echo "----------------------"
    echo "Taking $1: $2"
    echo "----------------------"
}

# Function to manage wg-quick commands with messages
function wg_quick_with_message() {
    local action=$1
    local profile=$2
    output_message "${action^^}" "$profile"
    wg-quick "$action" "$profile"
}

# Function to take down all active profiles
function wirego_down() {
    for active_profile in $active_profiles; do
        wg_quick_with_message down "$active_profile"
    done

    # Restart DNS resolver on Fedora
    if [ "${DISTRO}" == "fedora" ]; then
        sudo systemctl reset-failed systemd-resolved.service
        sudo systemctl restart systemd-resolved.service
    fi
}

# Detect Operating System and set DISTRO variable
if [ -f /etc/os-release ]; then
    source /etc/os-release
    DISTRO=${ID}
else
    echo "Unable to detect OS. Exiting."
    exit 1
fi

# Check for supported distributions (Fedora, Ubuntu)
if [[ "${DISTRO}" != "fedora" && "${DISTRO}" != "ubuntu" && "${DISTRO}" != "darwin" ]]; then
    echo "Warning: This script has been tested only with Fedora & Ubuntu. It may not work perfectly with ${DISTRO}."
    echo "If it does, please let us know."
    echo
fi

parameter=$1

# Check existence of /etc/wireguard/
if [ ! -d "/etc/wireguard" ]; then
    echo "The directory /etc/wireguard does not exist. Exiting."
    exit 1
fi

# Check existence of wg command
if ! command -v wg &> /dev/null; then
    echo "Cannot find 'wg': Is WireGuard installed?"
    exit 1
fi

# Get active profiles from WireGuard status
active_profiles=$(sudo wg | grep interface | awk '{print $2}')

# Handle 'up' command to activate selected profiles
if [ "$parameter" == "up" ]; then
    wirego_down

    # Load profiles from the wirego.profile file
    # so, populate $up_profiles
    source ~/.wirego/wirego.profile
    for up_profile in $up_profiles; do
        wg_quick_with_message up "$up_profile"
    done

    exit 0
fi

# Load all available profiles from /etc/wireguard/
profiles=$(sudo ls -1 /etc/wireguard/ | grep "\.conf" | awk -F'.' '{print $1}')

if [ -z "$parameter" ]; then
    # Show current status if no parameter is provided
    if [ -n "$active_profiles" ]; then
        echo "WireGuard is active, details:"
        sudo wg
    else
        echo "WireGuard is NOT active."
    fi

    list_profiles
    exit 0
fi

if [ "$parameter" == "qr" ]; then
    # Check for qrencode installation for QR code generation
    if ! command -v qrencode &> /dev/null; then
        echo "Cannot find 'qrencode'. You need to install it."
        exit 1
    fi

    echo "QR code generation"

    list_profiles

    read -rp "Enter profile for which you want to see the QR code: " profile_name

    # Check if the profile exists with sudo
	if ! sudo test -f "/etc/wireguard/${profile_name}.conf"; then
		echo "Profile '$profile_name' does not exist."
		exit 1
	fi

    sudo cat "/etc/wireguard/$profile_name.conf" | qrencode -t ansiutf8
    exit 0
fi

if [ "$parameter" == "down" ]; then
   if [ -n "$active_profiles" ]; then
       wirego_down
   else
       echo "WireGuard is already down."
   fi
   exit 0
fi

# Validate profile existence and bring it up if valid
if [[ "$profiles" == *"$parameter"* ]]; then
   if [[ "$active_profiles" == *"$parameter"* ]]; then
       echo "WireGuard profile '$parameter' is already up. Taking it down anyway."
   fi

   wirego_down
   wg_quick_with_message up "$parameter"
else
   echo "ERROR: Profile '$parameter' does not exist."
   list_profiles
   exit 1
fi
